name: Build and Release

on:
  push:
    branches: [master]
    tags:
      - "v*" # Trigger on version tags like v1.0.0
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.10]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller --hide-console hide-late -F main.py

      - name: Package binary and extra files
        run: |
          mkdir -p release
          cp dist/* release/
          mkdir -p release/config
          cp config/config.ini release/config/config.ini
          cp config/current_version.ini release/config/current_version.ini
          mkdir -p release/logo
          cp config/logo/AniBaza_Logo16x9.ass release/logo/AniBaza_Logo16x9.ass
          mkdir -p release/fonts
          cp config/fonts/AniBaza-Regular.otf release/fonts/AniBaza-Regular.otf

          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cp ffmpeginstall.bat release/ffmpeginstall.bat
            powershell Compress-Archive -Path release\* -DestinationPath ${{ runner.os }}.zip
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            zip -r ${{ runner.os }}.zip release
          else
            tar -czf ${{ runner.os }}.tar.gz -C release .
          fi

      - name: Upload archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-archive
          path: |
            *.zip
            *.tar.gz

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all archive artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          files: artifacts/**/*.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
